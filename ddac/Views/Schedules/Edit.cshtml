@model ddac.Models.Schedule

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Schedule</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ScheduleId)

        <div class="form-group">
            @Html.LabelFor(model => model.Departure, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class='input-group date col-md-4' id='datetimepicker1'>
                    @Html.EditorFor(m => m.Departure, new { htmlAttributes = new { @class = "form-control" } })
                    <span class="input-group-addon">
                        <i class="fa fa-calendar"></i>
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.Departure, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Arrival, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class='input-group date col-md-4' id='datetimepicker2'>
                    @Html.EditorFor(m => m.Departure, new { htmlAttributes = new { @class = "form-control" } })
                    <span class="input-group-addon">
                        <i class="fa fa-calendar"></i>
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.Arrival, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShipId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ShipId, new SelectList(ViewBag.shipdropdown, "ShipId", "ShipName"), "Select Ship", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ShipId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Destination, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Destination, "Select shipping destination", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Destination, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Source, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Source, "Select shipping source", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Source, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@Scripts.Render("~/bundles/datetimepicker")


<script>

    $(function () {
        var today = new Date();
        var tomorrow = new Date(today.getTime() + 24 * 60 * 60 * 1000);
        $('#datetimepicker1').datetimepicker({
            format: 'DD/MM/YYYY',
            minDate: today,
        });

        $('#datetimepicker2').datetimepicker({
            useCurrent: false,
            format: 'DD/MM/YYYY',
            minDate: tomorrow
        });
        $("#datetimepicker1").on("dp.change", function (e) {
            $('#datetimepicker2').data("DateTimePicker").minDate(e.date);
        });
        $("#datetimepicker2").on("dp.change", function (e) {
            $('#datetimepicker1').data("DateTimePicker").maxDate(e.date);
        });
    });

</script>